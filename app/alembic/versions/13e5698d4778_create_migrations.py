"""create migrations

Revision ID: 13e5698d4778
Revises: 
Create Date: 2025-07-31 17:01:30.696936

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '13e5698d4778'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('master_api_key', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('email_provider_configs', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('master_api_key')
    )
    op.create_index('idx_clients_is_active', 'clients', ['is_active'], unique=False)
    op.create_index('idx_clients_master_api_key', 'clients', ['master_api_key'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('priority', sa.String(length=10), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('to_email', sa.String(length=255), nullable=True),
    sa.Column('from_email', sa.String(length=255), nullable=True),
    sa.Column('reply_to', sa.String(length=255), nullable=True),
    sa.Column('cc', sa.JSON(), nullable=True),
    sa.Column('bcc', sa.JSON(), nullable=True),
    sa.Column('room_id', sa.UUID(), nullable=True),
    sa.Column('email_fallback', sa.JSON(), nullable=True),
    sa.Column('max_retry_attempts', sa.Integer(), nullable=False),
    sa.Column('retry_attempt', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_notifications_client_id', 'notifications', ['client_id'], unique=False)
    op.create_index('ix_notifications_created_at', 'notifications', ['created_at'], unique=False)
    op.create_index('ix_notifications_priority', 'notifications', ['priority'], unique=False)
    op.create_index('ix_notifications_scheduled_at', 'notifications', ['scheduled_at'], unique=False)
    op.create_index('ix_notifications_status', 'notifications', ['status'], unique=False)
    op.create_index('ix_notifications_type', 'notifications', ['type'], unique=False)
    op.create_table('rooms',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('room_type', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('max_members', sa.Integer(), nullable=True),
    sa.Column('created_by_user_id', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_message_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deactivated_reason', sa.String(length=50), nullable=True),
    sa.Column('deactivated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_rooms_client_id', 'rooms', ['client_id'], unique=False)
    op.create_index('idx_rooms_created_by_user_id', 'rooms', ['created_by_user_id'], unique=False)
    op.create_index('idx_rooms_is_active', 'rooms', ['is_active'], unique=False)
    op.create_index('idx_rooms_last_message_at', 'rooms', ['last_message_at'], unique=False)
    op.create_index('idx_rooms_room_type', 'rooms', ['room_type'], unique=False)
    op.create_table('scoped_keys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('scoped_api_key', sa.String(length=255), nullable=False),
    sa.Column('permissions', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id', 'user_id', name='uq_client_user_scoped_key'),
    sa.UniqueConstraint('scoped_api_key')
    )
    op.create_index('idx_scoped_keys_api_key', 'scoped_keys', ['scoped_api_key'], unique=False)
    op.create_index('idx_scoped_keys_client_id', 'scoped_keys', ['client_id'], unique=False)
    op.create_index('idx_scoped_keys_is_active', 'scoped_keys', ['is_active'], unique=False)
    op.create_index('idx_scoped_keys_user_id', 'scoped_keys', ['user_id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('room_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('content_type', sa.String(length=20), nullable=False),
    sa.Column('file_url', sa.String(length=500), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('file_mime_type', sa.String(length=100), nullable=True),
    sa.Column('reply_to_id', sa.UUID(), nullable=True),
    sa.Column('is_edited', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('sender_user_id', sa.String(length=255), nullable=False),
    sa.Column('sender_display_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('edited_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['reply_to_id'], ['messages.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_messages_content_type', 'messages', ['content_type'], unique=False)
    op.create_index('idx_messages_created_at', 'messages', ['created_at'], unique=False)
    op.create_index('idx_messages_is_deleted', 'messages', ['is_deleted'], unique=False)
    op.create_index('idx_messages_reply_to_id', 'messages', ['reply_to_id'], unique=False)
    op.create_index('idx_messages_room_active', 'messages', ['room_id', 'is_deleted', 'created_at'], unique=False)
    op.create_index('idx_messages_room_created', 'messages', ['room_id', 'created_at'], unique=False)
    op.create_index('idx_messages_room_id', 'messages', ['room_id'], unique=False)
    op.create_index('idx_messages_sender_user_id', 'messages', ['sender_user_id'], unique=False)
    op.create_table('notification_delivery_attempts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('notification_id', sa.UUID(), nullable=False),
    sa.Column('attempt_number', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('provider_name', sa.String(length=50), nullable=True),
    sa.Column('provider_response', sa.JSON(), nullable=True),
    sa.Column('provider_message_id', sa.String(length=255), nullable=True),
    sa.Column('attempted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['notification_id'], ['notifications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_delivery_attempts_attempted_at', 'notification_delivery_attempts', ['attempted_at'], unique=False)
    op.create_index('ix_delivery_attempts_notification_id', 'notification_delivery_attempts', ['notification_id'], unique=False)
    op.create_index('ix_delivery_attempts_status', 'notification_delivery_attempts', ['status'], unique=False)
    op.create_table('room_memberships',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('room_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('left_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_read_message_id', sa.UUID(), nullable=True),
    sa.Column('last_read_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['last_read_message_id'], ['messages.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('room_id', 'user_id', name='uq_room_user_membership')
    )
    op.create_index('idx_room_memberships_is_active', 'room_memberships', ['is_active'], unique=False)
    op.create_index('idx_room_memberships_last_read_message_id', 'room_memberships', ['last_read_message_id'], unique=False)
    op.create_index('idx_room_memberships_role', 'room_memberships', ['role'], unique=False)
    op.create_index('idx_room_memberships_room_id', 'room_memberships', ['room_id'], unique=False)
    op.create_index('idx_room_memberships_user_id', 'room_memberships', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_room_memberships_user_id', table_name='room_memberships')
    op.drop_index('idx_room_memberships_room_id', table_name='room_memberships')
    op.drop_index('idx_room_memberships_role', table_name='room_memberships')
    op.drop_index('idx_room_memberships_last_read_message_id', table_name='room_memberships')
    op.drop_index('idx_room_memberships_is_active', table_name='room_memberships')
    op.drop_table('room_memberships')
    op.drop_index('ix_delivery_attempts_status', table_name='notification_delivery_attempts')
    op.drop_index('ix_delivery_attempts_notification_id', table_name='notification_delivery_attempts')
    op.drop_index('ix_delivery_attempts_attempted_at', table_name='notification_delivery_attempts')
    op.drop_table('notification_delivery_attempts')
    op.drop_index('idx_messages_sender_user_id', table_name='messages')
    op.drop_index('idx_messages_room_id', table_name='messages')
    op.drop_index('idx_messages_room_created', table_name='messages')
    op.drop_index('idx_messages_room_active', table_name='messages')
    op.drop_index('idx_messages_reply_to_id', table_name='messages')
    op.drop_index('idx_messages_is_deleted', table_name='messages')
    op.drop_index('idx_messages_created_at', table_name='messages')
    op.drop_index('idx_messages_content_type', table_name='messages')
    op.drop_table('messages')
    op.drop_index('idx_scoped_keys_user_id', table_name='scoped_keys')
    op.drop_index('idx_scoped_keys_is_active', table_name='scoped_keys')
    op.drop_index('idx_scoped_keys_client_id', table_name='scoped_keys')
    op.drop_index('idx_scoped_keys_api_key', table_name='scoped_keys')
    op.drop_table('scoped_keys')
    op.drop_index('idx_rooms_room_type', table_name='rooms')
    op.drop_index('idx_rooms_last_message_at', table_name='rooms')
    op.drop_index('idx_rooms_is_active', table_name='rooms')
    op.drop_index('idx_rooms_created_by_user_id', table_name='rooms')
    op.drop_index('idx_rooms_client_id', table_name='rooms')
    op.drop_table('rooms')
    op.drop_index('ix_notifications_type', table_name='notifications')
    op.drop_index('ix_notifications_status', table_name='notifications')
    op.drop_index('ix_notifications_scheduled_at', table_name='notifications')
    op.drop_index('ix_notifications_priority', table_name='notifications')
    op.drop_index('ix_notifications_created_at', table_name='notifications')
    op.drop_index('ix_notifications_client_id', table_name='notifications')
    op.drop_table('notifications')
    op.drop_index('idx_clients_master_api_key', table_name='clients')
    op.drop_index('idx_clients_is_active', table_name='clients')
    op.drop_table('clients')
    # ### end Alembic commands ###
